

-optimizationpasses 2
-mergeinterfacesaggressively
-dontusemixedcaseclassnames
-flattenpackagehierarchy ''
-repackageclasses ''
-keepattributes SourceFile,LineNumberTable,*Annotation*,Signature,EnclosingMethod,EnclosingMethod,InnerClasses,*Annotation*,Signature,Exceptions
-adaptresourcefilenames **.fxml,**.png,**.css
-adaptresourcefilecontents **.properties,META-INF/MANIFEST.MF
-dontwarn javassist.**,afu.org.**,com.google.**,okhttp3.**,org.**,ch.**,jogamp.**,okio.**,okhttp3.**,javafx.**,javassist.**,kotlin.**,com.google.gson.**,javax.**,natives.**,native.**,joptsimple.**,netscape.**,com.fasterxml.**,org.reflections.**,net.runelite.**,me.tongfei.**,net.java.**,net.lingala.**,net.sf.**,net.java.**,com.apple.**,com.jakewharton.**,com.jogamp.**,com.sun.**,com.google.**,com.sun.**,com.jgoodies.**,com.miglayout.**,com.codehaus.**,com.github.**,com.miglayout.**,com.codehaus.**,io.reactivex.**,dorkbox.**,io.sentry.**



# Client scripts
-keep class com.client.script.impl.** {
    <fields>;
    <methods>;
}

# Various models used in json
-keep class com.client.definitions.server.ItemDef {
    <fields>;
    <methods>;
}

-keep class com.client.model.EquipmentModelType {
    <fields>;
    <methods>;
}

-keep class com.client.model.SkillLevel {
    <fields>;
    <methods>;
}

-keep class com.client.model.Skill {
    <fields>;
    <methods>;
}

-keep class com.client.model.GameItem {
    <fields>;
    <methods>;
}

-keep class com.client.draw.login.** {
    <fields>;
    <methods>;
}

-keep class com.client.draw.login.saves {
    <fields>;
    <methods>;
}

-keep class com.client.graphics.interfaces.builder.impl.tasks.model.** {
    <fields>;
    <methods>;
}

# Keep all classes inside application
-keep,allowobfuscation class com.**

# Keep names of fields marked with @FXML attribute
-keepclassmembers class * {
    @javafx.fxml.FXML
    <fields>;
    @javafx.fxml.FXML
    <methods>;
}

-keep class kotlin.** {
    <fields>;
    <methods>;
}

-keep class com.client.features.settings.Preferences {
    <fields>;
    <methods>;
}

-keep class com.client.features.gameframe.ScreenMode {
    <fields>;
    <methods>;
}

-keep class com.client.draw.login.** {
    <fields>;
    <methods>;
}

-keep class com.client.PlayerRights {
    <fields>;
    <methods>;
}

-keep class com.client.utilities.settings.Settings {
    <fields>;
    <methods>;
}

-keep class com.client.misc.ItemBonusDefinition {
    <fields>;
    <methods>;
}

-keep class com.client.discord.RPC {
    <fields>;
    <methods>;
}

-keep class javax.** {
    <fields>;
    <methods>;
}

-keep class org.** {
    <fields>;
    <methods>;
}

-keep class net.** {
    <fields>;
    <methods>;
}

-keep class ch.** {
    <fields>;
    <methods>;
}

-keep class com.google.** {
    <fields>;
    <methods>;
}

-keep class com.google.** {
    <fields>;
    <methods>;
}

-keep class com.pepperonas.** {
    <fields>;
    <methods>;
}

-keep class com.fasterxml.** {
    <fields>;
    <methods>;
}

-keep class com.google.** {
    <fields>;
    <methods>;
}

-keep class com.zaxxer.** {
    <fields>;
    <methods>;
}

-keep class com.mchange.** {
    <fields>;
    <methods>;
}

-keep class com.fasterxml.** {
    <fields>;
    <methods>;
}

-keep class com.thoughtwork.** {
    <fields>;
    <methods>;
}

-keep class club.** {
    <fields>;
    <methods>;
}

-keep class com.sun.** {
    <fields>;
    <methods>;
}

-keep class it.** {
    <fields>;
    <methods>;
}

-keep class io.** {
    <fields>;
    <methods>;
}

-keep class org.** {
    <fields>;
    <methods>;
}

-keep class ch.** {
    <fields>;
    <methods>;
}

-keep class jogamp.** {
    <fields>;
    <methods>;
}

-keep class okio.** {
    <fields>;
    <methods>;
}

-keep class okhttp3.** {
    <fields>;
    <methods>;
}

-keep class javafx.** {
    <fields>;
    <methods>;
}

-keep class javassist.** {
    <fields>;
    <methods>;
}

-keep class kotlin.** {
    <fields>;
    <methods>;
}

-keep class com.google.gson.** {
    <fields>;
    <methods>;
}

-keep class javax.** {
    <fields>;
    <methods>;
}

-keep class natives.** {
    <fields>;
    <methods>;
}

-keep class native.** {
    <fields>;
    <methods>;
}

-keep class joptsimple.** {
    <fields>;
    <methods>;
}

-keep class netscape.** {
    <fields>;
    <methods>;
}

-keep class com.fasterxml.** {
    <fields>;
    <methods>;
}

-keep class org.reflections.** {
    <fields>;
    <methods>;
}

-keep class net.runelite.** {
    <fields>;
    <methods>;
}

-keep class me.tongfei.** {
    <fields>;
    <methods>;
}

-keep class net.java.** {
    <fields>;
    <methods>;
}

-keep class net.lingala.** {
    <fields>;
    <methods>;
}

-keep class net.sf.** {
    <fields>;
    <methods>;
}

-keep class net.java.** {
    <fields>;
    <methods>;
}

-keep class com.apple.** {
    <fields>;
    <methods>;
}

-keep class com.jakewharton.** {
    <fields>;
    <methods>;
}

-keep class com.jogamp.** {
    <fields>;
    <methods>;
}

-keep class com.sun.** {
    <fields>;
    <methods>;
}

-keep class com.google.** {
    <fields>;
    <methods>;
}

-keep class com.sun.** {
    <fields>;
    <methods>;
}

-keep class com.jgoodies.** {
    <fields>;
    <methods>;
}

-keep class com.miglayout.** {
    <fields>;
    <methods>;
}

-keep class com.codehaus.** {
    <fields>;
    <methods>;
}

-keep class com.github.** {
    <fields>;
    <methods>;
}

-keep class com.miglayout.** {
    <fields>;
    <methods>;
}

-keep class com.codehaus.** {
    <fields>;
    <methods>;
}

-keep class io.reactivex.** {
    <fields>;
    <methods>;
}

-keep class dorkbox.** {
    <fields>;
    <methods>;
}

-keep class io.sentry.** {
    <fields>;
    <methods>;
}

-keep class org.reflections.**

# Runelite
-keep public class net.runelite.**

-keep class afu.org.** {
    <fields>;
    <methods>;
}

-keep class com.google.** {
    <fields>;
    <methods>;
}

-keep class okhttp3.** {
    <fields>;
    <methods>;
}

-keep class it.**

-keep class io.**

# Keep - Native method names. Keep all native class/method names.
-keepclasseswithmembers,includedescriptorclasses,allowshrinking class * {
    native <methods>;
}

# Remove - Math method calls. Remove all invocations of Math
# methods without side effects whose return values are not used.
-assumenosideeffects public class java.lang.Math {
    public static double sin(double);
    public static double cos(double);
    public static double tan(double);
    public static double asin(double);
    public static double acos(double);
    public static double atan(double);
    public static double toRadians(double);
    public static double toDegrees(double);
    public static double exp(double);
    public static double log(double);
    public static double log10(double);
    public static double sqrt(double);
    public static double cbrt(double);
    public static double IEEEremainder(double,double);
    public static double ceil(double);
    public static double floor(double);
    public static double rint(double);
    public static double atan2(double,double);
    public static double pow(double,double);
    public static int round(float);
    public static long round(double);
    public static double random();
    public static int abs(int);
    public static long abs(long);
    public static float abs(float);
    public static double abs(double);
    public static int max(int,int);
    public static long max(long,long);
    public static float max(float,float);
    public static double max(double,double);
    public static int min(int,int);
    public static long min(long,long);
    public static float min(float,float);
    public static double min(double,double);
    public static double ulp(double);
    public static float ulp(float);
    public static double signum(double);
    public static float signum(float);
    public static double sinh(double);
    public static double cosh(double);
    public static double tanh(double);
    public static double hypot(double,double);
    public static double expm1(double);
    public static double log1p(double);
}

# Remove - Number method calls. Remove all invocations of Number
# methods without side effects whose return values are not used.
-assumenosideeffects public class java.lang.* extends java.lang.Number {
    public static java.lang.String toString(byte);
    public static java.lang.Byte valueOf(byte);
    public static byte parseByte(java.lang.String);
    public static byte parseByte(java.lang.String,int);
    public static java.lang.Byte valueOf(java.lang.String,int);
    public static java.lang.Byte valueOf(java.lang.String);
    public static java.lang.Byte decode(java.lang.String);
    public int compareTo(java.lang.Byte);
    public static java.lang.String toString(short);
    public static short parseShort(java.lang.String);
    public static short parseShort(java.lang.String,int);
    public static java.lang.Short valueOf(java.lang.String,int);
    public static java.lang.Short valueOf(java.lang.String);
    public static java.lang.Short valueOf(short);
    public static java.lang.Short decode(java.lang.String);
    public static short reverseBytes(short);
    public int compareTo(java.lang.Short);
    public static java.lang.String toString(int,int);
    public static java.lang.String toHexString(int);
    public static java.lang.String toOctalString(int);
    public static java.lang.String toBinaryString(int);
    public static java.lang.String toString(int);
    public static int parseInt(java.lang.String,int);
    public static int parseInt(java.lang.String);
    public static java.lang.Integer valueOf(java.lang.String,int);
    public static java.lang.Integer valueOf(java.lang.String);
    public static java.lang.Integer valueOf(int);
    public static java.lang.Integer getInteger(java.lang.String);
    public static java.lang.Integer getInteger(java.lang.String,int);
    public static java.lang.Integer getInteger(java.lang.String,java.lang.Integer);
    public static java.lang.Integer decode(java.lang.String);
    public static int highestOneBit(int);
    public static int lowestOneBit(int);
    public static int numberOfLeadingZeros(int);
    public static int numberOfTrailingZeros(int);
    public static int bitCount(int);
    public static int rotateLeft(int,int);
    public static int rotateRight(int,int);
    public static int reverse(int);
    public static int signum(int);
    public static int reverseBytes(int);
    public int compareTo(java.lang.Integer);
    public static java.lang.String toString(long,int);
    public static java.lang.String toHexString(long);
    public static java.lang.String toOctalString(long);
    public static java.lang.String toBinaryString(long);
    public static java.lang.String toString(long);
    public static long parseLong(java.lang.String,int);
    public static long parseLong(java.lang.String);
    public static java.lang.Long valueOf(java.lang.String,int);
    public static java.lang.Long valueOf(java.lang.String);
    public static java.lang.Long valueOf(long);
    public static java.lang.Long decode(java.lang.String);
    public static java.lang.Long getLong(java.lang.String);
    public static java.lang.Long getLong(java.lang.String,long);
    public static java.lang.Long getLong(java.lang.String,java.lang.Long);
    public static long highestOneBit(long);
    public static long lowestOneBit(long);
    public static int numberOfLeadingZeros(long);
    public static int numberOfTrailingZeros(long);
    public static int bitCount(long);
    public static long rotateLeft(long,int);
    public static long rotateRight(long,int);
    public static long reverse(long);
    public static int signum(long);
    public static long reverseBytes(long);
    public int compareTo(java.lang.Long);
    public static java.lang.String toString(float);
    public static java.lang.String toHexString(float);
    public static java.lang.Float valueOf(java.lang.String);
    public static java.lang.Float valueOf(float);
    public static float parseFloat(java.lang.String);
    public static boolean isNaN(float);
    public static boolean isInfinite(float);
    public static int floatToIntBits(float);
    public static int floatToRawIntBits(float);
    public static float intBitsToFloat(int);
    public static int compare(float,float);
    public boolean isNaN();
    public boolean isInfinite();
    public int compareTo(java.lang.Float);
    public static java.lang.String toString(double);
    public static java.lang.String toHexString(double);
    public static java.lang.Double valueOf(java.lang.String);
    public static java.lang.Double valueOf(double);
    public static double parseDouble(java.lang.String);
    public static boolean isNaN(double);
    public static boolean isInfinite(double);
    public static long doubleToLongBits(double);
    public static long doubleToRawLongBits(double);
    public static double longBitsToDouble(long);
    public static int compare(double,double);
    public boolean isNaN();
    public boolean isInfinite();
    public int compareTo(java.lang.Double);
    public byte byteValue();
    public short shortValue();
    public int intValue();
    public long longValue();
    public float floatValue();
    public double doubleValue();
    public int compareTo(java.lang.Object);
    public boolean equals(java.lang.Object);
    public int hashCode();
    public java.lang.String toString();
}

# Remove - String method calls. Remove all invocations of String
# methods without side effects whose return values are not used.
-assumenosideeffects public class java.lang.String {
    public static java.lang.String copyValueOf(char[]);
    public static java.lang.String copyValueOf(char[],int,int);
    public static java.lang.String valueOf(boolean);
    public static java.lang.String valueOf(char);
    public static java.lang.String valueOf(char[]);
    public static java.lang.String valueOf(char[],int,int);
    public static java.lang.String valueOf(double);
    public static java.lang.String valueOf(float);
    public static java.lang.String valueOf(int);
    public static java.lang.String valueOf(java.lang.Object);
    public static java.lang.String valueOf(long);
    public boolean contentEquals(java.lang.StringBuffer);
    public boolean endsWith(java.lang.String);
    public boolean equalsIgnoreCase(java.lang.String);
    public boolean equals(java.lang.Object);
    public boolean matches(java.lang.String);
    public boolean regionMatches(boolean,int,java.lang.String,int,int);
    public boolean regionMatches(int,java.lang.String,int,int);
    public boolean startsWith(java.lang.String);
    public boolean startsWith(java.lang.String,int);
    public byte[] getBytes();
    public byte[] getBytes(java.lang.String);
    public char charAt(int);
    public char[] toCharArray();
    public int compareToIgnoreCase(java.lang.String);
    public int compareTo(java.lang.Object);
    public int compareTo(java.lang.String);
    public int hashCode();
    public int indexOf(int);
    public int indexOf(int,int);
    public int indexOf(java.lang.String);
    public int indexOf(java.lang.String,int);
    public int lastIndexOf(int);
    public int lastIndexOf(int,int);
    public int lastIndexOf(java.lang.String);
    public int lastIndexOf(java.lang.String,int);
    public int length();
    public java.lang.CharSequence subSequence(int,int);
    public java.lang.String concat(java.lang.String);
    public java.lang.String replaceAll(java.lang.String,java.lang.String);
    public java.lang.String replace(char,char);
    public java.lang.String replaceFirst(java.lang.String,java.lang.String);
    public java.lang.String[] split(java.lang.String);
    public java.lang.String[] split(java.lang.String,int);
    public java.lang.String substring(int);
    public java.lang.String substring(int,int);
    public java.lang.String toLowerCase();
    public java.lang.String toLowerCase(java.util.Locale);
    public java.lang.String toString();
    public java.lang.String toUpperCase();
    public java.lang.String toUpperCase(java.util.Locale);
    public java.lang.String trim();
}

# Remove - StringBuffer method calls. Remove all invocations of StringBuffer
# methods without side effects whose return values are not used.
-assumenosideeffects public class java.lang.StringBuffer {
    public java.lang.String toString();
    public char charAt(int);
    public int capacity();
    public int codePointAt(int);
    public int codePointBefore(int);
    public int indexOf(java.lang.String,int);
    public int lastIndexOf(java.lang.String);
    public int lastIndexOf(java.lang.String,int);
    public int length();
    public java.lang.String substring(int);
    public java.lang.String substring(int,int);
}

# Remove - StringBuilder method calls. Remove all invocations of StringBuilder
# methods without side effects whose return values are not used.
-assumenosideeffects public class java.lang.StringBuilder {
    public java.lang.String toString();
    public char charAt(int);
    public int capacity();
    public int codePointAt(int);
    public int codePointBefore(int);
    public int indexOf(java.lang.String,int);
    public int lastIndexOf(java.lang.String);
    public int lastIndexOf(java.lang.String,int);
    public int length();
    public java.lang.String substring(int);
    public java.lang.String substring(int,int);
}
